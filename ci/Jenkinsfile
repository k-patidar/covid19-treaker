pipeline {
  agent any
  environment {
    DOCKERHUB_USER = credentials('dockerhub-user')
    DOCKERHUB_PASS = credentials('dockerhub-pass')
    ECR_USER = credentials('aws-access-key-id')
    ECR_PASS = credentials('aws-secret-access-key')
    EC2_SSH = credentials('ec2-ssh-key')
    EC2_HOST = 'your-ec2-public-ip'
  }
  stages {
    stage('Build Images') {
      steps {
        sh 'docker-compose build'
      }
    }
    stage('Push to DockerHub') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'dockerhub-user', usernameVariable: 'DOCKERHUB_USER', passwordVariable: 'DOCKERHUB_PASS')]) {
          sh 'echo $DOCKERHUB_PASS | docker login -u $DOCKERHUB_USER --password-stdin'
          sh 'docker-compose push'
        }
      }
    }
    stage('Push to ECR') {
      steps {
        withCredentials([
          string(credentialsId: 'aws-access-key-id', variable: 'ECR_USER'),
          string(credentialsId: 'aws-secret-access-key', variable: 'ECR_PASS')
        ]) {
          sh 'aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin <your-ecr-repo>'
          sh 'docker-compose push'
        }
      }
    }
    stage('Deploy to EC2') {
      steps {
        withCredentials([sshUserPrivateKey(credentialsId: 'ec2-ssh-key', keyFileVariable: 'EC2_SSH')]) {
          sh 'ssh -i $EC2_SSH ec2-user@$EC2_HOST "cd covid-tracker && git pull && docker-compose pull && docker-compose up -d --force-recreate"'
        }
      }
    }
  }
}
